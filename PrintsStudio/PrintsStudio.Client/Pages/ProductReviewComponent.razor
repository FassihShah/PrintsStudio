@using PrintsStudio.Client.Models
@inject HttpClient Http
@inject PrintsStudio.Client.Services.ReviewService  rs
@inject PrintsStudio.Client.Services.UserService us
<style>
    .review-section {
        background-color: #ceedec; /* light aqua background */
        padding: 30px;
        margin-top: 40px;
        border-radius: 8px;
    }

    .section-title {
        color: #242f66; /* dark blue for headings */
        font-size: 24px;
        margin-bottom: 20px;
    }

    .review {
        background-color: #fff;
        border: 1px solid #ccc;
        border-left: 5px solid #07a6a6; /* dark aqua accent */
        border-radius: 6px;
        padding: 15px;
        margin-bottom: 20px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }

        .review h5 {
            color: #242f66; /* dark blue reviewer name */
            margin-bottom: 5px;
        }

        .review small {
            display: block;
            margin-top: 10px;
            color: #07a6a6; /* dark aqua for rating/date info */
        }

    .btn-accent {
        background-color: #07a6a6;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 5px;
        cursor: pointer;
    }

        .btn-accent:hover {
            background-color: #066e6e;
        }
</style>

<div class="review-section">
    <h3 class="section-title">Customer Reviews</h3>

    @if (reviews == null)
    {
        <p>Loading reviews...</p>
    }
    else if (!reviews.Any())
    {
        <p>No reviews yet.</p>
    }
    else
    {
        for(int i=0;i<reviews.Count;i++)
        {
            <div class="review">
                <h5>@names[i]</h5>
                <p>@reviews[i].Comment</p>
                <small>Rating: @reviews[i].Rating / 5 - @reviews[i].ReviewDate.ToShortDateString()</small>
            </div>
        }
    }
</div>

@code {
    [Parameter] public int ProductId { get; set; }

    private List<Review> reviews=new List<Review>();
    private List<string> names=new List<string>();

    protected override async Task OnInitializedAsync()
    {
        var x = await rs.GetAllAsync();
        reviews = x.Where(r => r.ProductId == ProductId).ToList();
        foreach(var r in reviews)
        {
            var u = await us.GetByIdAsync(r.UserId);
            names.Add(u.FullName);
        }
    }
}
