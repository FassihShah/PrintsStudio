@page "/add-product"
@using Models
@inject NavigationManager Navigation

<!-- Bootstrap 5 CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
<!-- Bootstrap 5 JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>

<style>
    .bg-aqua {
        background-color: #07a6a6;
    }

        .bg-aqua:hover {
            background-color: #059494;
        }

    .bg-blue-deep {
        background-color: #242f66;
    }

        .bg-blue-deep:hover {
            background-color: #1b234d;
        }

    .bg-light-aqua {
        background-color: #ceedec;
    }

    .ring-aqua:focus {
        outline: none;
        box-shadow: 0 0 0 2px #07a6a6;
    }

    .heading {
        font-family: 'Merriweather', serif;
        color: #242f66;
    }

    .content {
        font-family: 'Lato', sans-serif;
        color: #242f66;
    }
</style>

<div class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="p-5 rounded-4 shadow-lg bg-light-aqua content w-100" style="max-width: 800px;">
        <h2 class="heading text-center mb-4">Add New Product</h2>

        <!-- Product Name -->
        <div class="mb-3">
            <label class="form-label fw-semibold">Product Name</label>
            <input class="form-control ring-aqua" @bind="product.Name" />
        </div>

        <!-- Description -->
        <div class="mb-3">
            <label class="form-label fw-semibold">Description</label>
            <textarea class="form-control ring-aqua" rows="3" @bind="product.Description"></textarea>
        </div>

        <!-- Base Price -->
        <div class="mb-3">
            <label class="form-label fw-semibold">Base Price</label>
            <input type="number" class="form-control ring-aqua" @bind="product.BasePrice" />
        </div>

        <!-- Images Upload -->
        <div class="mb-3">
            <label class="form-label fw-semibold">Upload Product Images</label>
            <InputFile OnChange="HandleImageUpload" multiple class="form-control" />
            <ul class="mt-2 list-unstyled small">
                @foreach (var img in product.Images)
                {
                    <li>@img</li>
                }
            </ul>
        </div>

        <!-- Design Templates -->
        <div class="mb-3">
            <label class="form-label fw-semibold">Design Templates</label>
            @foreach (var template in product.DesignTemplates)
            {
                <div class="input-group mb-2">
                    <input class="form-control ring-aqua" placeholder="Template Image URL" @bind="template.TemplateImageUrl" />
                    <button class="btn btn-danger" @onclick="@(() => RemoveTemplate(template))">✕</button>
                </div>
            }
            <button class="btn bg-aqua text-white fw-medium" @onclick="AddTemplate">+ Add Template</button>
        </div>

        <!-- Customization Options -->
        <div class="mb-4">
            <label class="form-label fw-semibold">Customization Options</label>
            @foreach (var option in product.CustomizationOptions)
            {
                <div class="row g-2 mb-2">
                    <div class="col-md-4">
                        <input class="form-control ring-aqua" placeholder="Option Name" @bind="option.OptionName" />
                    </div>
                    <div class="col-md-6">
                        <input class="form-control ring-aqua" placeholder="Option Value" @bind="option.OptionValue" />
                    </div>
                    <div class="col-md-2">
                        <button class="btn btn-danger w-100" @onclick="@(() => RemoveOption(option))">✕</button>
                    </div>
                </div>
            }
            <button class="btn bg-aqua text-white fw-medium" @onclick="AddOption">+ Add Option</button>
        </div>

        <!-- Save Button -->
        <div class="text-center">
            <button class="btn bg-blue-deep text-white fw-semibold px-4 py-2 rounded-pill" @onclick="SaveProduct">Save Product</button>
        </div>
    </div>
</div>

@code {
    private Product product = new Product
        {
            Name = "",
            Description = "",
            BasePrice = 0,
            Images = new List<string>(),
            DesignTemplates = new List<ProductDesignTemplate>(),
            CustomizationOptions = new List<CustomizationOption>(),
            Reviews = new List<Review>()
        };

    private async Task HandleImageUpload(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            var fileName = $"{Guid.NewGuid()}_{file.Name}";
            product.Images.Add(fileName);
        }
    }

    private void AddTemplate()
    {
        product.DesignTemplates.Add(new ProductDesignTemplate { TemplateImageUrl = "" });
    }

    private void RemoveTemplate(ProductDesignTemplate template)
    {
        product.DesignTemplates.Remove(template);
    }

    private void AddOption()
    {
        product.CustomizationOptions.Add(new CustomizationOption { OptionName = "", OptionValue = "" });
    }

    private void RemoveOption(CustomizationOption option)
    {
        product.CustomizationOptions.Remove(option);
    }

    private void SaveProduct()
    {
        Console.WriteLine("Product Name: " + product.Name);
        Console.WriteLine("Base Price: " + product.BasePrice);
        Console.WriteLine("Images: " + string.Join(", ", product.Images));
        Console.WriteLine("Templates Count: " + product.DesignTemplates.Count);
        Console.WriteLine("Options Count: " + product.CustomizationOptions.Count);
        // TODO: Save product to backend/database
    }
}
