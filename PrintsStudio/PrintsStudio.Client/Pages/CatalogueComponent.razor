@page "/catalogue"
@using PrintsStudio.Client.Models
@inject NavigationManager Navigation
@inject PrintsStudio.Client.Services.ProductService ps
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<style>
    body {
        font-family: 'Lato', sans-serif;
        background-color: #ceedec;
        margin: 0;
        padding: 0;
        overflow-x: hidden;
        max-width: 100%;
    }

    header {
        background: linear-gradient(135deg, #07a6a6, #242f66);
        color: white;
        padding: 2.5rem 1rem;
        text-align: center;
        font-family: 'Merriweather', serif;
        margin-bottom: 2rem;
        border-radius: 0 0 1.5rem 1.5rem;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .search-filter {
        
        padding: 1.5rem;
        border-radius: 1rem;
       
        max-width: 800px;
        margin: 0 auto 2rem auto;
    }

    .form-control, .form-select {
        border-radius: 0.5rem;
        padding: 0.75rem;
        border: 1px solid #ccc;
        font-size: 1rem;
    }

    .card {
        border: none;
        border-radius: 1rem;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.15);
        }

    .card-title {
        font-family: 'Merriweather', serif;
        color: #242f66;
        font-size: 1.2rem;
        font-weight: bold;
    }

    .price {
        color: #07a6a6;
        font-weight: 600;
        margin-bottom: 1rem;
        font-size: 1.1rem;
    }

    .view-button {
        background-color: #07a6a6;
        border: none;
        color: white;
        padding: 0.6rem 1.5rem;
        border-radius: 2rem;
        font-weight: bold;
        text-decoration: none;
        transition: background-color 0.3s;
        font-size: 0.95rem;
    }

        .view-button:hover {
            background-color: #055f5f;
            color: white;
        }

    .card-img-top {
        width: 100%;
        height: 230px;
        object-fit: contain;
        background-color: #f8f9fa;
        border-radius: 1rem 1rem 0 0;
        padding: 1rem;
    }

    .input-icon {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        font-size: 1.2rem;
        color: #aaa;
    }

    .select-icon {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        font-size: 1.2rem;
        color: #07a6a6;
    }

</style>
<NavComponent></NavComponent>
<header>
    <h1>Catalogue - Prints Studio</h1>
</header>

<PrintsStudio.Client.Pages.BreadCrumbComponent />

<!-- Centered Search + Filter UI -->
<div class="search-filter">
    <div class="row g-3 align-items-center justify-content-center">
        <div class="col-12 col-md-8 position-relative">
            <input @bind="searchQuery" class="form-control ps-5" placeholder="Search products..." />
            <i class="bi bi-search input-icon"></i>
        </div>
        <div class="col-12 col-md-4 position-relative">
            <select @bind="selectedCategory" class="form-select pe-5">
                <option value="all">All Categories</option>
                <option>Business Cards</option>
                <option>Wedding Cards</option>
                <option>PhotoAlbum</option>
                <option>Flyers</option>
                <option>Shirts</option>
                <option>Stickers</option>
            </select>
            <i class="bi bi-funnel-fill select-icon"></i>
        </div>
    </div>
</div>

<!-- Product Cards -->
<div class="container">
    <div class="row g-4">
        @foreach (var product in FilteredProducts)
        {
            @if (product.Images.Count >= 1)
            {
                <div class="col-12 col-sm-6 col-lg-4">
                    <div class="card h-100 shadow-sm p-2">
                        @if (product.Images.Count > 1)
                        {
                            <img src="@($"https://localhost:7032{product.Images[1]}")" class="card-img-top" alt="@product.Name" />
                        }
                        else
                        {
                            <img src="@($"https://localhost:7032{product.Images[0]}")" class="card-img-top" alt="@product.Name" />
                        }
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="price">Rs. @product.BasePrice</p>
                            <a href="/product-detail/@product.ProductId" class="view-button mt-auto align-self-center">View Details</a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
<div class="mt-5">
    <FooterComponent></FooterComponent>
</div>





@code {
    private string selectedCategory = "all";
    private string searchQuery = "";
    private List<Product> products = new();

    protected override async Task OnInitializedAsync()
    {
        products = await ps.GetAllAsync();
    }

    private IEnumerable<Product> FilteredProducts => products
        .Where(p =>
            (selectedCategory == "all" || p.Name == selectedCategory) &&
            (string.IsNullOrWhiteSpace(searchQuery) || p.Name.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))
        );
}
