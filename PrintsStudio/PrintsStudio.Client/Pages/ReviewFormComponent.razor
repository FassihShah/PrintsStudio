@page "/review-form/{id:int}"
@using PrintsStudio.Client.Models
@inject IJSRuntime JS
@inject PrintsStudio.Client.Services.ReviewService rs
@inject NavigationManager Navigation

<style>
    .review-form-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        animation: fadeIn 0.3s ease-in-out;
    }

    .review-form-container {
        background-color: #ceedec;
        padding: 30px 25px;
        border-radius: 1rem;
        width: 100%;
        max-width: 540px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.25);
        font-family: 'Lato', sans-serif;
    }

    textarea,
    input[type="number"] {
        width: 100%;
        padding: 10px 12px;
        border: 1px solid #ccc;
        border-radius: 10px;
        font-size: 16px;
        font-family: 'Lato', sans-serif;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05);
    }

        textarea:focus,
        input[type="number"]:focus {
            outline: none;
            border-color: #07a6a6;
            box-shadow: 0 0 0 2px rgba(7, 166, 166, 0.2);
            background-color: #f9fdfd;
        }

    .btn-submit {
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        font-weight: bold;
        border: none;
        border-radius: 8px;
        transition: background-color 0.3s ease;
    }

        .btn-submit:hover {
            background-color: #218838;
        }

    .btn-cancel {
        background-color: red;
        color: black;
        padding: 10px 20px;
        font-weight: bold;
        border: none;
        border-radius: 8px;
        transition: background-color 0.3s ease;
    }

        .btn-cancel:hover {
            background-color: red;
        }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }
</style>

@if (showForm)
{
    <div class="review-form-overlay">
        <div class="review-form-container">
            <h2 class="text-center mb-4" style="font-family: 'Merriweather', serif; color: #242f66;">
                Submit Your Review
            </h2>

            <div class="mb-3">
                <label class="mb-1 font-semibold">Rating (1-5)</label>
                <input type="number" min="1" max="5" @bind="review.Rating" />
            </div>

            <div class="mb-3">
                <label class="mb-1 font-semibold">Comment</label>
                <textarea rows="4" @bind="review.Comment" placeholder="Write your feedback here..."></textarea>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <button class="btn-submit" @onclick="SaveReview">Submit</button>
                <button class="btn-cancel" @onclick="CloseForm">Cancel</button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Review review = new Review
        {
            UserId = "",
            Rating = 5,
            Comment = "",
            ReviewDate = DateTime.Now
        };

    private bool showForm = true;

    protected override async Task OnInitializedAsync()
    {
        review.ProductId = Id;
        review.UserId = await JS.InvokeAsync<string>("localStorage.getItem", "userId");
    }

    private async Task SaveReview()
    {
        await rs.CreateAsync(review);
        CloseForm();
    }

    private void CloseForm()
    {
        showForm = false;
        StateHasChanged();
        Navigation.NavigateTo("/cart");
    }

    protected override void OnInitialized()
    {
        showForm = true;
    }
}
