@page "/review-form"
@using scd_project.Models;
@inject NavigationManager Navigation
<style>
    .review-form-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        animation: fadeIn 0.3s ease-in-out;
    }

    .review-form-container {
        background-color: #ceedec;
        padding: 30px 25px;
        border-radius: 1rem;
        width: 100%;
        max-width: 480px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.25);
        font-family: 'Lato', sans-serif;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }
</style>
@if (showForm)
{
    <div class="review-form-overlay">
        <div class="review-form-container">
            <h2 class="text-center mb-4" style="font-family: 'Merriweather', serif; color: #242f66;">
                Submit Your Review
            </h2>

            <div class="mb-3">
                <label class="block text-[#242f66] mb-1 font-semibold">Product ID</label>
                <input type="number" class="w-full p-2 rounded border border-gray-300 font-[Lato]" @bind="review.ProductId" />
            </div>

            <div class="mb-3">
                <label class="block text-[#242f66] mb-1 font-semibold">User ID</label>
                <input type="text" class="w-full p-2 rounded border border-gray-300 font-[Lato]" @bind="review.UserId" />
            </div>

            <div class="mb-3">
                <label class="block text-[#242f66] mb-1 font-semibold">Rating (1-5)</label>
                <input type="number" min="1" max="5" class="w-full p-2 rounded border border-gray-300 font-[Lato]" @bind="review.Rating" />
            </div>

            <div class="mb-3">
                <label class="block text-[#242f66] mb-1 font-semibold">Comment</label>
                <textarea class="w-full p-2 rounded border border-gray-300 font-[Lato] resize-none" rows="4" @bind="review.Comment"></textarea>
            </div>

            <div class="flex justify-between mt-4">
                <button class="bg-[#07a6a6] hover:bg-[#068c8c] text-white px-4 py-2 rounded-lg transition-all duration-200" @onclick="SaveReview">
                    Submit
                </button>
                <button class="bg-gray-400 hover:bg-gray-500 text-white px-4 py-2 rounded-lg transition-all duration-200" @onclick="CloseForm">
                    Cancel
                </button>
            </div>
        </div>
    </div>
}


@code {
    private Review review = new Review
        {
            ProductId = 0,
            UserId = "",
            Rating = 5,
            Comment = "",
            ReviewDate = DateTime.Now
        };

    private bool showForm = true;

    private async Task SaveReview()
    {
        review.ReviewDate = DateTime.Now;
        Console.WriteLine($"Review for Product {review.ProductId}:");
        Console.WriteLine($"User: {review.UserId}");
        Console.WriteLine($"Rating: {review.Rating}");
        Console.WriteLine($"Comment: {review.Comment}");

        // TODO: Send to backend service

        CloseForm();
    }

    private void CloseForm()
    {
        showForm = false;
        StateHasChanged();
        // Optional: Navigate away or notify parent component
    }

    protected override void OnInitialized()
    {
        showForm = true;
    }
}
